name: 'Product Photos'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/productphoto
    metadata:
      groupName: 'Product Photos'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Dohvati sve fotografije proizvoda

        Vraća paginirani popis fotografija proizvoda (10 po stranici).
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "current_page": 1,
            "data": [
              {
                "id": 1,
                "url": "photos/photo1.jpg",
                "description": "Front view"
              }
            ],
            "total": 15,
            ...
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/productphoto
    metadata:
      groupName: 'Product Photos'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Dodaj novu fotografiju proizvoda

        Kreira novu fotografiju s podacima o URL-u i opisu.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      url:
        name: url
        description: 'Putanja slike.'
        required: true
        example: photos/photo1.jpg
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'Opis slike.'
        required: false
        example: 'Slika sprijeda'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      url: photos/photo1.jpg
      description: 'Slika sprijeda'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 2,
            "url": "photos/photo1.jpg",
            "description": "Front view"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/productphoto/{id}'
    metadata:
      groupName: 'Product Photos'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Dohvati jednu fotografiju proizvoda

        Dohvaća jednu fotografiju po ID-u.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the productphoto.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      productPhoto:
        name: productPhoto
        description: 'ID fotografije.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
      productPhoto: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "url": "photos/photo1.jpg",
            "description": "Front view"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/productphoto/{id}'
    metadata:
      groupName: 'Product Photos'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Ažuriraj fotografiju proizvoda

        Ažurira postojeću fotografiju.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the productphoto.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      productPhoto:
        name: productPhoto
        description: 'ID fotografije.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
      productPhoto: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      url:
        name: url
        description: 'Putanja slike.'
        required: true
        example: photos/photo1.jpg
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'Opis slike.'
        required: false
        example: 'Slika sprijeda'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      url: photos/photo1.jpg
      description: 'Slika sprijeda'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "url": "photos/photo1.jpg",
            "description": "Front view"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/productphoto/{id}'
    metadata:
      groupName: 'Product Photos'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Obriši fotografiju proizvoda

        Briše fotografiju po ID-u.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the productphoto.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      productPhoto:
        name: productPhoto
        description: 'ID fotografije.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
      productPhoto: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Product photo deleted successfully."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/productphoto/image/{id}'
    metadata:
      groupName: 'Product Photos'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Prikaži stvarnu sliku

        Vraća binarni sadržaj slike iz `storage/app/public/...`.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID fotografije.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: 'binary Image file'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/productphoto/prikazi/{id}'
    metadata:
      groupName: 'Product Photos'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Dohvati info o slici (prikazi)

        Vraća samo `url` i `description` za sliku.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID fotografije.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "url": "photos/photo1.jpg",
            "description": "Front view"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
